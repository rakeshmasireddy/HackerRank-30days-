// Abstract Classes are an essential feature of object-oriented programming. In essense, it's the separation between what a class does and how it's accomplished.

// One real world example of this concept is a snack machine, where you give the machine money, make a selection, and the machine dispenses the snack. 

//Error occured: Java compiler error “class, interface, or enum expected” 
//Answer: references from: https://www.baeldung.com/java-class-interface-enum-expected.
//Note: Because these classes are being written in the same file, you must not use an access modifier (e.g.:public) 
        when declaring MyBook or your code will not execute.
import java.util.*;

abstract class Book {
    String title;
    String author;
    
    Book(String title, String author) {
        this.title = title;
        this.author = author;
    }
    
    abstract void display();
}

// Declare your class here. Do not use the 'public' access modifier.
    // Declare the price instance variable
    
    /**   
    *   Class Constructor
    *   
    *   @param title The book's title.
    *   @param author The book's author.
    *   @param price The book's price.
    **/
    // Write your constructor here
     class MyBook extends Book{
         int price;
         MyBook(String title, String author, int price) {
         super(title,author);
         this.price = price;
    }
    
    /**   
    *   Method Name: display
    *   
    *   Print the title, author, and price in the specified format.
    **/
    // Write your method here
    void display(){
       System.out.println("Title: " +title);
       System.out.println("Author: "+author);
       System.out.println("Price: "+price);

    }
}
    
// End class

public class Solution {
   
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String title = scanner.nextLine();
        String author = scanner.nextLine();
        int price = scanner.nextInt();
        scanner.close();

        Book book = new MyBook(title, author, price);
        book.display();
    }
}
